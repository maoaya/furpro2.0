// Utilidad para configurar Supabase sin confirmaci√≥n de email obligatoria
import supabase from '../supabaseClient';
import { getConfig } from '../config/environment';

/**
 * Registra un usuario con auto-confirmaci√≥n si est√° habilitada
 * @param {Object} userData - Datos del usuario (email, password, options)
 * @returns {Promise<Object>} - Resultado del registro
 */
export async function signUpWithAutoConfirm(userData) {
  const config = getConfig();
  
  try {
    console.log('üöÄ Iniciando registro:', userData.email);
    
    // BYPASS DEFINITIVO: NO ENVIAR captchaToken en absoluto
    // Si Supabase no recibe captchaToken, no validar√° captcha
    console.log('üõ°Ô∏è CAPTCHA BYPASS: NO enviando captchaToken para evitar validaci√≥n');
    
    // Registro en Supabase SIN captcha token
    const { data: authData, error: authError } = await supabase.auth.signUp(userData);
    
    if (authError) {
      console.error('‚ùå Error en registro:', authError);
      return { success: false, error: authError };
    }
    
    console.log('‚úÖ Usuario registrado:', authData.user?.email);
    
    // Si auto-confirm est√° habilitado, SIEMPRE continuar sin importar si hay sesi√≥n
    if (config.autoConfirmSignup) {
      console.log('üîì Auto-confirm habilitado: omitiendo verificaci√≥n de email completamente');
      return {
        success: true,
        user: authData.user,
        session: authData.session, // Puede ser null, no importa
        needsEmailConfirmation: false,
        message: 'Cuenta creada exitosamente. Redirigiendo a inicio...',
        autoConfirmActive: true
      };
    }
    
    // Si auto-confirm NO est√° habilitado, seguir comportamiento normal
    if (!authData.session) {
      console.log('üìß Se requiere confirmaci√≥n de email');
      return {
        success: true,
        user: authData.user,
        session: null,
        needsEmailConfirmation: true,
        message: 'Cuenta creada. Verifica tu email para activarla.'
      };
    } else {
      console.log('üîì Sesi√≥n iniciada autom√°ticamente');
      return {
        success: true,
        user: authData.user,
        session: authData.session,
        needsEmailConfirmation: false,
        message: 'Cuenta creada e iniciada sesi√≥n exitosamente.'
      };
    }
    
  } catch (error) {
    console.error('üí• Error inesperado en registro:', error);
    return { success: false, error };
  }
}

/**
 * Verifica si el auto-confirm est√° habilitado
 * @returns {boolean}
 */
export function isAutoConfirmEnabled() {
  const config = getConfig();
  return config.autoConfirmSignup === true;
}

/**
 * Obtiene informaci√≥n sobre la configuraci√≥n de confirmaci√≥n
 * @returns {Object}
 */
export function getConfirmationInfo() {
  const autoConfirm = isAutoConfirmEnabled();
  return {
    autoConfirmEnabled: autoConfirm,
    message: autoConfirm ? 
      'Auto-confirmaci√≥n habilitada: no se requiere verificaci√≥n de email' :
      'Verificaci√≥n de email requerida para activar la cuenta'
  };
}

export default {
  signUpWithAutoConfirm,
  isAutoConfirmEnabled,
  getConfirmationInfo
};